#!/bin/bash -e

# -------------------------------------------------------------------------------------------------
# Functions
# -------------------------------------------------------------------------------------------------
BASEDIR=$(dirname $(readlink -f ${0}))
BASENAME=$(basename ${0})

source "${BASEDIR}/util.sh"

function usage {
  echo "Rebasing a branch is NOT allowed if history cannot be overwritten. The alternative is to merge old branch with parent, create new and delete old branch"
  echo "The <remote> defaults to 'origin'"
  echo ""
  echo "Usage: ${BASENAME} [<remote>] <child branch> <new child branch> <parent branch>"
  exit 0
}

# -------------------------------------------------------------------------------------------------
# Parse Arg
# -------------------------------------------------------------------------------------------------
if [[ ${#} -eq 1 && ("${1}" == "-h" || "${1}" == "--help") ]]
then
  usage
fi

if [[ ${#} -lt 3 || ${#} -gt 4 ]]
then
  dieUsage "Invalid argument count ${#}"
fi

remote="origin"
if [[ ${#} -eq 3 ]]
then
  childBranch="${1}"
  newChildBranch="${2}"
  parBranch="${3}"
elif [[ ${#} -eq 4 ]]
then
  remote="${1}"
  childBranch="${2}"
  newChildBranch="${3}"
  parBranch="${4}"
fi

# -------------------------------------------------------------------------------------------------
# Main
# -------------------------------------------------------------------------------------------------

highlight "Merge ${childBranch} to ${parBranch}"
git-merge-branch --squash "${childBranch}" "${parBranch}"

highlight "Create branch ${newChildBranch}"
git-mk-branch-remote "${remote}" "${newChildBranch}"
