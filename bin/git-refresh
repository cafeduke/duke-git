#!/bin/bash -e

# -------------------------------------------------------------------------------------------------
# Functions
# -------------------------------------------------------------------------------------------------
BASEDIR=$(dirname $(readlink -f ${0}))
BASENAME=$(basename ${0})

source "${BASEDIR}/util.sh"

function usage {
  echo "Refresh current branch with the remote counterpart"
  echo "The <remote> defaults to 'origin'"
  echo ""
  echo "Usage: ${BASENAME} [<remote>]"
  exit 0
}

# -------------------------------------------------------------------------------------------------
# Parse Arg
# -------------------------------------------------------------------------------------------------
if [[ ${#} -eq 1 && ("${1}" == "-h" || "${1}" == "--help") ]]
then
  usage
fi

if [[ ${#} -gt 1 ]]
then
  dieUsage "Incorrect argument count ${#}"
fi

remote="origin"
if [[ ${#} -eq 1 ]]
then
  remote="${1}"
fi

# -------------------------------------------------------------------------------------------------
# Main
# -------------------------------------------------------------------------------------------------

set +e

currBranch=$(git branch --show-current)
heading "Pull latest commits from ${remote}/${currBranch}"

# Pull and capture status
git pull ${remote} ${currBranch}
pullStatus=$?

# Check if there is any merge conflict
checkMergeConflit
isConflict=$?

# Since pull suceeded, there were no conflicts. Auto-merge is done.
if [[ ${pullStatus} -eq 0 ]]
then
  heading "[Branch=${currBranch}] Top 10 commits AFTER pull"
  git-history 10
  exit 0
fi

# Note: If we are here, 'git pull' failed (exited with 1).

# Pull failed, but there are were no conficts -- Error during pull
# This means refresh fails
if [[ ${isConflict} -eq 0 ]]
then
  exit 1
fi

# Pull failed, because there were conflicts and these are resolved
highlight "Double check the conflict resolution and execute 'git commit --all -m <commit message>'"
