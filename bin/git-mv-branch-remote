#!/bin/bash -e

# -------------------------------------------------------------------------------------------------
# Functions
# -------------------------------------------------------------------------------------------------
BASEDIR=$(dirname $(readlink -f ${0}))
BASENAME=$(basename ${0})

source "${BASEDIR}/util.sh"

function usage {
  echo "Rename branch on local repository and on remote (default origin) repository."
  echo ""
  echo "Usage: ${BASENAME} [<remote>] <old-branch-name> <new-branch-name>"
  exit 0
}

# -------------------------------------------------------------------------------------------------
# Parse Arg
# -------------------------------------------------------------------------------------------------
if [[ ${#} -eq 1 && ("${1}" == "-h" || "${1}" == "--help") ]]
then
  usage
fi

remote="origin"
if [[ ${#} -eq 3 ]]
then
  remote="$1"
  shift
fi

if [[ "$#" -ne 2 ]]
then
  dieUsage "Incorrect argument count ${#}"
fi

oldBranch="${1}"
newBranch="${2}"

# -------------------------------------------------------------------------------------------------
# Main
# -------------------------------------------------------------------------------------------------

# In awk NF is number of fields, so this prints the last column
list=$(git branch | awk '{print $NF}')
if [[ ! "${list}" =~ "${oldBranch}" ]]
then
  echo "Local branch ${oldBranch} does not exist. Skipping local rename."
else
  echo "Renaming local branch: ${oldBranch} --> ${newBranch}"
  echo "-------------------------------------------------------------------------------------------------"
  git-mv-branch ${oldBranch} ${newBranch}
fi
echo "Renaming remote branch: ${oldBranch} --> ${newBranch}"
echo "-------------------------------------------------------------------------------------------------"
git push ${remote} -u ${newBranch}
